//  Mixins
//  ---------------------------
//
//  Table of Contents:
//
//   1. Media queries
//   2. Typography
//   3. Style
//   4. Forms
//

// 1. Media queries
// ---------

@mixin mq($width, $type: min) {

  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type == max {
      $width: $width - 1px;
    }

    @media screen and (#{$type}-width: $width) {
      @content;
    }
  }

}

// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7
// http://bjango.com/articles/min-device-pixel-ratio/
@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: round($ratio * 96dpi)),
  only screen and (min-resolution: $ratio * 1dppx) {
    @content;
  }
}


// @retina-image($filename, $background-size, $extension*, $retina-filename*, $retina-suffix*, $asset-pipeline*)
// * = optional
// https://github.com/thoughtbot/bourbon/blob/v4-stable/app/assets/stylesheets/addons/_retina-image.scss
//
// Example
// -------
// @include retina-image(home-icon, 32px 20px, jpg, @2x);

@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {
  background-image:       url("#{$filename}.#{$extension}");

  @include hidpi {
    @if $retina-filename {
      background-image: url("#{$retina-filename}.#{$extension}");
    } @else {
      background-image: url("#{$filename}#{$retina-suffix}.#{$extension}");
    }

    background-size: $background-size;
  }
}

// 2. Typography
// ---------


/// Helper to include sans-serif typography styles
/// @param {weight} $weight
@mixin sans($weight: 400) {
  font-family: $sans;
  font-weight: $weight;
}

/// Helper to include serif typography styles
/// @param {weight} $weight
@mixin serif($weight: 400) {
  font-family: $serif;
  font-weight: $weight;
}

/// Function to output font size from a sass map
/// @param {size} $key
@mixin font-size($size) {
  @if map-has-key($font-sizes, $size) {
    $fontSize: map-get($font-sizes, $size);

    font-size: $fontSize;
  }
}


// 3. Style
// ---------

/// Usage: @include flex-block
@mixin flex-block {
  display: flex;
}

/// Usage: @include flex-block
@mixin flex-center {
  @include flex-block;
  display: flex;
  justify-content: center;
  align-items: center;
}

/// Usage: @include flex-block
@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

/// Usage: @include center-block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/// Usage: @include text-truncate
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 4. Forms
// ---------

/// Usage: @include placeholder() {}
@mixin placeholder() {
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
